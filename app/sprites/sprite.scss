// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$breadcrumb-name: 'breadcrumb';
$breadcrumb-x: 53px;
$breadcrumb-y: 12px;
$breadcrumb-offset-x: -53px;
$breadcrumb-offset-y: -12px;
$breadcrumb-width: 17px;
$breadcrumb-height: 7px;
$breadcrumb-total-width: 85px;
$breadcrumb-total-height: 50px;
$breadcrumb-image: 'sprite.png';
$breadcrumb: (53px, 12px, -53px, -12px, 17px, 7px, 85px, 50px, 'sprite.png', 'breadcrumb', );
$burger-name: 'burger';
$burger-x: 53px;
$burger-y: 0px;
$burger-offset-x: -53px;
$burger-offset-y: 0px;
$burger-width: 32px;
$burger-height: 12px;
$burger-total-width: 85px;
$burger-total-height: 50px;
$burger-image: 'sprite.png';
$burger: (53px, 0px, -53px, 0px, 32px, 12px, 85px, 50px, 'sprite.png', 'burger', );
$cart-name: 'cart';
$cart-x: 26px;
$cart-y: 0px;
$cart-offset-x: -26px;
$cart-offset-y: 0px;
$cart-width: 27px;
$cart-height: 25px;
$cart-total-width: 85px;
$cart-total-height: 50px;
$cart-image: 'sprite.png';
$cart: (26px, 0px, -26px, 0px, 27px, 25px, 85px, 50px, 'sprite.png', 'cart', );
$profile-name: 'profile';
$profile-x: 0px;
$profile-y: 0px;
$profile-offset-x: 0px;
$profile-offset-y: 0px;
$profile-width: 26px;
$profile-height: 26px;
$profile-total-width: 85px;
$profile-total-height: 50px;
$profile-image: 'sprite.png';
$profile: (0px, 0px, 0px, 0px, 26px, 26px, 85px, 50px, 'sprite.png', 'profile', );
$search-name: 'search';
$search-x: 0px;
$search-y: 26px;
$search-offset-x: 0px;
$search-offset-y: -26px;
$search-width: 23px;
$search-height: 24px;
$search-total-width: 85px;
$search-total-height: 50px;
$search-image: 'sprite.png';
$search: (0px, 26px, 0px, -26px, 23px, 24px, 85px, 50px, 'sprite.png', 'search', );
$spritesheet-width: 85px;
$spritesheet-height: 50px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($breadcrumb, $burger, $cart, $profile, $search, );
$spritesheet: (85px, 50px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(../sprites/#{$sprite-image}); // change path to sprite.scss
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
